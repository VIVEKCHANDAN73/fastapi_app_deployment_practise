name: Build and push image to ECR
on:
  push:
    branches:
      - master


jobs:
  bulid-and-push-ecr-image:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Install Utilities
      run: |
        sudo apt-get update
        sudo apt-get install -y jq unzip
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: fastapiapp
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo docker login -u AWS -p $(aws ecr get-login-password --region ap-south-1) 730335304698.dkr.ecr.ap-south-1.amazonaws.com
          sudo docker pull 730335304698.dkr.ecr.ap-south-1.amazonaws.com/fastapiapp:latest
          sudo docker stop fastapiapp || true && sudo docker rm fastapiapp || true
          sudo docker run -d -p 8000:80 --name fastapiapp 730335304698.dkr.ecr.ap-south-1.amazonaws.com/fastapiapp:latest


